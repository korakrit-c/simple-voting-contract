{"version":3,"sources":["stores/Web3Store.js","hooks/useAccount.js","components/Account.js","components/Contract.js","hooks/useContract.js","components/CandidateCard.js","hooks/useCandidateList.js","hooks/useCandidateScore.js","hooks/useVote.js","components/Voter.js","hooks/useCandidateCount.js","App.js","hooks/useWeb3.js","components/Header.js","components/Footer.js","index.js"],"names":["web3Store","makeObservable","this","observable","action","w3","web3","useAccount","useState","accounts","setAccounts","myAccount","setMyAccount","balance","setBalance","fetch","useCallback","a","eth","getAccounts","tempAccounts","tempAccount","getBalance","result","utils","fromWei","useEffect","Account","observer","className","Contract","href","target","rel","useContract","contractAddress","useMemo","SimpleVote","err","console","warn","CandidateCard","index","candidateName","setCandidateName","candidateVoteCount","setCandidateVoteCount","contract","methods","candidateList","call","voteCount","useCandidateList","setVoteCount","totalVotesFor","useCandidateScore","loading","setLoading","vote","id","callback","options","from","errored","send","on","error","confirmationNumber","receipt","log","useVote","voteCallback","Button","variant","onClick","Voter","candidateCount","setCandidateCount","getCandidates","parseInt","useCandidateCount","arr","Array","x","i","map","idx","key","App","initWeb3","window","ethereum","tmpWeb3","Web3","enable","updateWeb3","useWeb3","role","Header","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb3cd14.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport { observable, action, makeObservable } from 'mobx'\n\nclass Web3Store {\n    constructor() {\n        makeObservable(this);\n    }\n\n    @observable web3: Web3 | null = null\n    @action\n    updateWeb3 = (w3: Web3) => {\n        this.web3 = w3\n    }\n}\n\nexport const web3Store = new Web3Store()\n","import { useState, useEffect, useCallback  } from 'react'\nimport { web3Store } from '../stores/Web3Store'\n\nexport const useAccount = () => {\n    const web3 = web3Store.web3;\n    const [accounts, setAccounts] = useState([\"0x0000000000000000000000000000000000000000\"]);\n    const [myAccount, setMyAccount] = useState(\"0x0000000000000000000000000000000000000000\");\n    const [balance, setBalance] = useState(\"0.00\");\n\n    const fetch = useCallback(async () => {\n        if(!web3) {\n            return\n        }\n\n        const tempAccounts = await web3.eth.getAccounts();\n        setAccounts(tempAccounts);\n        const tempAccount = tempAccounts[0];\n\n        if(tempAccount){\n            setMyAccount(tempAccount);\n            const result = await web3.eth.getBalance(tempAccount);\n            setBalance(web3.utils.fromWei(result));\n        }\n    },[web3])\n\n    useEffect(() => {\n        fetch()\n    }, [fetch])\n\n    return {accounts, myAccount, balance};\n}","import React from 'react';\nimport { observer } from 'mobx-react-lite'\nimport { useAccount } from './../hooks/useAccount'\n\nexport const Account = observer(() => {\n    const { myAccount, balance } = useAccount();\n    return (\n        <div className=\"Account alert alert-success\">\n            <div>\n                <span>Account: {myAccount}</span>\n            </div>\n            <div>\n                <span>Balance: {balance} ETH</span>\n            </div>\n        </div>\n    )\n})\n\nexport default Account;","import React from 'react';\n\nconst Contract = () => {\n    return (\n        <div className=\"alert alert-success \">\n            <div className=\"text-left\">\n                <span>Contract Address: 0xFB03FbBb1EB7af714057F0225EFFA4B3B3199994\n                    ( <a href=\"https://kovan.etherscan.io/address/0xFB03FbBb1EB7af714057F0225EFFA4B3B3199994\" target=\"_blank\" rel=\"noopener noreferrer\">Open on Etherscan</a> )\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Contract;","import { useMemo } from 'react'\nimport { web3Store } from '../stores/Web3Store'\nimport SimpleVote from '../abi/SimpleVote.json';\n\nexport const useContract = () => {\n    const web3 = web3Store.web3\n    const contractAddress = \"0xFB03FbBb1EB7af714057F0225EFFA4B3B3199994\";\n\n    const contract = useMemo(() => {\n        if (!web3) {\n            return null\n        }\n\n        try {\n            const tempContract = new web3.eth.Contract(SimpleVote, contractAddress)\n            return tempContract\n        } catch (err) {\n            console.warn(err)\n            return null\n        }\n        \n    }, [web3, contractAddress])\n    return contract\n}","import React from 'react';\nimport { useCallback } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { observer } from 'mobx-react-lite'\n\nimport { useCandidateList } from '../hooks/useCandidateList'\nimport { useCandidateScore } from '../hooks/useCandidateScore'\nimport { useVote } from '../hooks/useVote'\n\ninterface Props {\n    index: number\n}\n\nexport const CandidateCard = observer(({ index }: Props) => {\n    const { candidateName } = useCandidateList(index)\n    const { voteCount, fetch } = useCandidateScore(index)\n    const { vote, loading } = useVote()\n\n    const voteCallback = useCallback(async() => {\n        await fetch()\n    }, [fetch])\n\n    return (\n        <div className=\"CandidateCard\">\n            <div className=\"card\">\n                <h5 className=\"card-header\">{candidateName} ({index})</h5>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">Vote count : {voteCount}</p>\n                    <Button variant=\"primary\" onClick={() => {vote(index, voteCallback)}}>Vote</Button>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n)\n\n\n\nexport default CandidateCard;","import { useState, useCallback, useEffect } from 'react'\nimport { useContract } from './useContract'\n\nexport const useCandidateList = (index: number) =>{\n    const [candidateName, setCandidateName] = useState(\"{candidateName}\");\n    const [candidateVoteCount, setCandidateVoteCount] = useState(0);\n    const contract = useContract()\n\n    const fetch = useCallback(async () => {\n        if(!contract){\n            return\n        }\n\n        const result = await contract.methods.candidateList(index).call();\n        setCandidateName(result.candidateName);\n        setCandidateVoteCount(result.voteCount);\n    }, [contract, index])\n\n    useEffect(() => {\n        fetch()\n    }, [fetch])\n\n    return {\n        candidateName, candidateVoteCount\n    }\n}","import { useState, useCallback, useEffect } from 'react'\nimport { useContract } from './useContract'\n\nexport const useCandidateScore = (index: number) =>{\n    const [voteCount, setVoteCount] = useState(0);\n    const contract = useContract()\n\n    const fetch = useCallback(async() => {\n        if(!contract){\n            return\n        }\n\n        const result = await contract.methods.totalVotesFor(index).call();\n        setVoteCount(result);\n    }, [contract, index])\n\n    useEffect(() => {\n        fetch()\n    }, [fetch])\n\n    return {\n        voteCount, fetch\n    }\n}","import { useState, useCallback } from 'react'\nimport { useContract } from './useContract'\nimport { useAccount } from './useAccount'\n\nexport const useVote = () =>{\n    const contract = useContract();\n    const { myAccount } = useAccount();\n    const [loading, setLoading] = useState(false);\n\n    const vote = useCallback(async (id, callback) => {\n        if(!contract || !myAccount){\n            return\n        }\n\n        let options = {\n            from: myAccount\n        }\n\n        setLoading(true);\n        let confirmed = false;\n        let errored = false;\n\n        contract.methods.vote(id).send(options)\n        .on('error', (error) => {\n            setLoading(false);\n            if(!errored){\n                console.error(error);\n                errored = true;\n            }\n        })\n        .on('confirmation', (confirmationNumber, receipt) => {\n            console.log('confirmationNumber', confirmationNumber);\n            console.log(receipt);\n            setLoading(false);\n            if(!confirmed){\n                //message.success('Vote confirmed')\n                if(callback){\n                    callback();\n                }\n            }\n        })\n        \n    }, [contract, myAccount])\n\n    return {\n        vote, loading\n    }\n}","import React from 'react'\nimport { useMemo } from 'react'\nimport { observer } from 'mobx-react-lite'\n\nimport CandidateCard from './CandidateCard'\nimport { useCandidateCount } from '../hooks/useCandidateCount'\n\nexport const Voter = observer(() => {\n    const { candidateCount } = useCandidateCount();\n    const arr = useMemo(() => Array.from(new Array(candidateCount), (x, i) => i), [candidateCount])\n\n    return (\n        <div className=\"Voter\">\n            <div className=\"card\">\n                {arr.map((idx) => (\n                    <CandidateCard index={idx} key={idx} />\n                ))}\n            </div>\n        </div>\n    )\n}\n)\n\n\n\nexport default Voter;","import { useState, useCallback, useEffect } from 'react'\nimport { useContract } from './useContract'\n\nexport const useCandidateCount = () =>{\n    const [candidateCount, setCandidateCount] = useState(0);\n    const contract = useContract()\n\n    const fetch = useCallback(async () => {\n        if(!contract){\n            return\n        }\n        \n        const result = await contract.methods.getCandidates().call();\n        setCandidateCount(parseInt(result));\n    }, [contract])\n\n    useEffect(() => {\n        fetch()\n    }, [fetch])\n\n    return {\n        candidateCount, fetch\n    }\n}","import React from 'react';\n\nimport './css/App.css';\nimport { useWeb3 } from './hooks/useWeb3';\nimport Account from './components/Account'\nimport Contract from './components/Contract'\nimport Voter from './components/Voter'\n\nfunction App() {\n  useWeb3();\n  \n  return (\n    <div className=\"App \">\n      <main role=\"main\" className=\"container mt-5\">\n      <Account />\n      <Contract />\n      <Voter />\n        \n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useCallback } from 'react'\nimport Web3 from 'web3'\nimport { web3Store } from '../stores/Web3Store'\n\nexport const useWeb3 = () => {\n    const initWeb3 = useCallback(async () => {\n        if (window.ethereum) {\n            const tmpWeb3 = new Web3(window.ethereum)\n            try {\n                await window.ethereum.enable();\n                web3Store.updateWeb3(tmpWeb3);\n            } catch (err) {\n                console.log(err)\n            }\n            \n        }\n        else {\n            console.log(\"no ethereum?\");\n        }\n    }, [])\n\n    useEffect(() => {\n        initWeb3();\n    }, [initWeb3])\n\n    return web3Store.web3;\n}","import React from 'react';\n\nfunction Header() {\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n                <a className=\"navbar-brand\" href=\"#home\">Dog vs Cat</a>\n                <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#home\">Home <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#link\">Link</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link disabled\" href=\"#disable\">Disabled</a>\n                        </li>\n                    </ul>\n                    <button id=\"connectButton\" className=\"btn btn-outline-success my-2 my-sm-0\">Search</button>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <span className=\"text-muted\">Simple Voting by <a href=\"https://github.com/korakrit-c\">@korakrit-c</a></span>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\n\nimport App from './App';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/sticky-footer-navbar.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}